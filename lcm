import numpy as np
def north_west_corner_method(supply,demand,cost):
    allocation=np.zeros((len(supply),len(demand)),dtype=int)
    i,j=0,0
    while i<len(supply)and j<len(demand):
        alloc=min(supply[i],demand[j])
        allocation[i][j]=alloc
        supply[i]-=alloc
        demand[j]-=alloc
        if supply[i]==0:
            i+=1
        elif demand[j]==0:
            j+=1
    return allocation

supply=[17,12,16]
demand=[14,8,23]
cost=[
    [13,15,16],
    [7,11,2],
    [19,20,9]
]
allocation=north_west_corner_method(supply,demand,cost)
print("IBFS:")
print(np.array(allocation))
