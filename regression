pip install scikit-learn
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Sample Data (replace with your actual dataset)
np.random.seed(0)
x = np.random.randn(100)
y = 2 * x + np.random.randn(100) * 0.5
data = pd.DataFrame({'X': x, 'Y': y})

# Step 1: Split the data into training and testing sets
X = data[['X']]  # Feature (independent variable)
Y = data['Y']    # Target (dependent variable)
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=0)

# Step 2: Create and train the model
model = LinearRegression()
model.fit(X_train, Y_train)

# Step 3: Make predictions
Y_pred = model.predict(X_test)

# Step 4: Evaluate the model
mse = mean_squared_error(Y_test, Y_pred)
r2 = r2_score(Y_test, Y_pred)

print("Mean Squared Error:", mse)
print("R^2 Score:", r2)
print("Model Coefficient (Slope):", model.coef_[0])
print("Model Intercept:", model.intercept_)

# Step 5: Plot the regression line
plt.figure(figsize=(8, 6))
plt.scatter(X, Y, color='blue', alpha=0.5, label="Actual Data")
plt.plot(X_test, Y_pred, color='red', label="Regression Line")
plt.title("Linear Regression")
plt.xlabel("X")
plt.ylabel("Y")
plt.legend()
plt.show()
